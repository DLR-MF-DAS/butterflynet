"""
This code is generated by Ridvan Salih KUZU @DLR
LAST EDITED:  11.01.2022
ABOUT SCRIPT:
It contains some custom plotting functions for visualizing the experimental results in this project.
"""

import numpy as np
from skimage import io
from PIL import Image
import skimage
from skimage.draw import polygon2mask
from scipy import ndimage
from scipy.signal import medfilt2d #,wiener
#from scipy.ndimage import gaussian_filter
from skimage import measure


root_1='/local_home/kuzu_ri/Dropbox/Laminar-Turbulent Flow/images/benchmark/gt/'
root_2='/local_home/kuzu_ri/Dropbox/Laminar-Turbulent Flow/images/benchmark/18/'
ma=root_1+'ma-6.png'
save=root_2+'im-6.png'
savex=root_2+'imx-6.png'
mask = io.imread(ma)
from skimage.transform import resize,rescale
mask = skimage.measure.block_reduce(mask, (2,2), np.max)
im = io.imread(save)

s=256
out=np.zeros((s,s,3))
for i in range(s):
    for j in range(s):
        ref = mask[i, j]
        res = im[i, j]
        if ref>235 and res>235:
            out[i,j,:]=(255,255,255)
        elif ref<50 and res<50:
            out[i, j,:] = (0, 0, 0)
        elif ref<50 and res>235: # False Positives
            out[i, j,:] = (255, 0, 255)
        elif ref >235 and res <50: # False Negatives
            out[i, j,:] = (0,255,255)
        else:
            print('Something Wrong')

out_contour_image = Image.fromarray(out.astype(np.uint8))
out_contour_image.save(savex)


