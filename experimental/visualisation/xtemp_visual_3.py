"""
This code is generated by Ridvan Salih KUZU @DLR
LAST EDITED:  01.06.2021
ABOUT SCRIPT:
It is a temporary file for experimenting.
"""

import matplotlib.pyplot as plt
import post_processing
import glob
import pandas as pd
plt.style.use('seaborn-whitegrid')


#df = pd.read_csv('../dataset/supervised/fileNames.txt')
#images = ['../dataset/supervised/image/' + file.strip() for file in  df[df.columns[1]].values]
#masks = ['../dataset/supervised/mask/' + file.strip() for file in  df[df.columns[2]].values]
#contours = ['../dataset/supervised/contour/' + file.strip() for file in  df[df.columns[2]].values]


#for im, ma,co in zip(images,masks,contours):
#    if im.split('/')[-1]=='Flug_00549_035_1.bmp' or im.split('/')[-1]=='Flug_00550_012_2.bmp' or im.split('/')[-1]=='Flug_00554_028_2.bmp'\
#            or im.split('/')[-1]=='OptiHyl_00026_175_1.bmp' or im.split('/')[-1]=='OptiHyl_00028_205_1.bmp' or im.split('/')[-1]=='Senvion_00007_032_2.bmp'\
#            or im.split('/')[-1]=='versus_00022_224_1.bmp' or im.split('/')[-1]=='versus_RH_upper_00022_226.bmp' or im.split('/')[-1]=='versus_RH_upper_00047_385.bmp':
#        post_processing.post_processing(im,ma,co,None,None,0,0)

# MobileUNnet with Imagenet initialization (3 channel) and ReduceLRonPlateu
#Loss MSE, optimization Adam

x=['5.5M', '8.7M', '8.8M', '0.0025', '0.001', '0.0005', '0.00025', '0.0001']
y_train= [0.679103344678879, 0.671463772654533, 0.764364540576935, 0.910868391394615, 0.976516366004944, 0.976683720946312, 0.970447510480881, 0.972702711820602]
dy_train=[0.053906068879079, 0.047791096693238, 0.123870468924043, 0.128751680781743, 0.003093245103522, 0.002337237967891 ,0.016459754730938, 0.007093139033833]

y_valid= [0.713756561279297, 0.715142324566841, 0.841437697410584, 0.919428601861, 0.97226732969284, 0.967851758003235, 0.961869552731514, 0.959310904145241]
dy_valid=[0.087616796352352, 0.05243877199692, 0.099039595574282, 0.093918551824528, 0.007074008827288, 0.013810917922041 ,0.014262338494323, 0.005864124952374]

plt.errorbar(x, y_train, yerr=dy_train, fmt='o', color='black',ecolor='lightgray',label='train accuracy', elinewidth=3, capsize=0)
plt.errorbar(x, y_valid, yerr=dy_valid, fmt='x', color='red',ecolor='lightcoral',label='validation accuracy', elinewidth=3, capsize=0)
plt.xlabel('Learning Rates')
plt.ylabel('Accuracy')
plt.title('Hyperparameter Comparison')
plt.legend(loc="lower right")
plt.grid(True)


plt.show()