"""
This code is generated by Ridvan Salih KUZU @DLR
LAST EDITED:  01.06.2021
ABOUT SCRIPT:
It is the collection of utility functions for various purposes.
"""

import matplotlib.pyplot as plt

def exponential_decay(lr,s):
    '''
    THIS FUNCTION IS EXPERIMENTAL
    THIS FUNCTION AIMS LEARNING RATE UPDATING SCHEDULE WITH EXPONENTIAL DECAY.
    :param lr: learning rate
    :param s: scaling parameter for each update
    :return: returns the scheduling funtion
    '''
    def _exponential_decay_fn(epoch):
        return lr*0.1**(epoch/s)

    return _exponential_decay_fn


def display_results(display_list):
    '''
    THIS FUNCTION IS EXPERIMENTAL
    THIS FUNCTION HELPS INSTANT DISPLAYING OF PREDICTIONS WHILE DEBUGGING IN evaluate.py SCRIPT.
    :param display_list: list of predicted images to be displayed for quality check
    :return: returns nothing
    '''
    plt.figure(figsize=(15, 15))
    for i,(title,image) in enumerate(display_list.items()):
        plt.subplot(1, len(display_list), i+1)
        plt.title(title)
        #image = Image.fromarray((display_list[i] * 255).astype(np.uint8))
        #image.show()
        plt.imshow(image, cmap='gray', vmin=0, vmax=255)
        plt.axis('off')
    plt.show()


def print_history(history, type, file_name):
    '''
    THIS FUNCTION SAVES TRAINING AND VALIDTION STEPS INTO A DISPLAY FILE.
    :param history: model history records
    :param type: type of the records to be saved
    :param file_name: path to be saved
    :return: returns nothing
    '''
    fig = plt.figure()
    plt.plot(history.history['{}'.format(type)])
    plt.plot(history.history['val_{}'.format(type)])
    plt.title('model {}'.format(type))
    plt.ylabel('{}'.format(type))
    plt.xlabel('epoch')
    plt.legend(['train', 'valid'], loc='upper left')
    plt.grid(True)
    fig.savefig(file_name, dpi=fig.dpi)